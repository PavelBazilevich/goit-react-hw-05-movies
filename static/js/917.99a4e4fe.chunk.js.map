{"version":3,"file":"static/js/917.99a4e4fe.chunk.js","mappings":"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","sources":["Pages/Movies/Movies.styled.js","components/SearchMoviList/SearchMoviList.jsx","Pages/Movies/Movies.jsx","Utils/Api.jsx","Utils/Styled.jsx","components/SearchMoviList/SearchMoviList.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 300px;\n  box-sizing: border-box;\n  border: 2px solid orange;\n  border-radius: 4px;\n  font-size: 18px;\n  background-color: white;\n  background-position: 10px 10px;\n  background-repeat: no-repeat;\n  padding: 12px 20px 12px 40px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  margin-left: 5px;\n  border-radius: 5px;\n  background-size: 70%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n    background-color: orange;\n    color: white;\n  }\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { LinkStyled } from 'Utils/Styled';\nimport { Text } from './SearchMoviList.styled';\n\nconst SearchMoviList = ({ resultQuery }) => {\n  const location = useLocation();\n  return (\n    <>\n      {resultQuery.map(({ title, id }) => {\n        return (\n          <li key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              <Text>{title}</Text>\n            </LinkStyled>\n          </li>\n        );\n      })}\n    </>\n  );\n};\nexport default SearchMoviList;\n","import { useState } from 'react';\nimport { searhMovies } from 'Utils/Api';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input, Button, Form } from './Movies.styled';\nimport SearchMoviList from 'components/SearchMoviList/SearchMoviList';\nimport { useEffect } from 'react';\n\nconst Movies = () => {\n  const [resultQuery, setResultQuery] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (query === '') return;\n    const searchByRequest = async () => {\n      try {\n        const fethMovi = await searhMovies(query);\n        setResultQuery(fethMovi);\n      } catch {\n        setError(\n          'Sorry, it was not possible to download what you were looking for ðŸ˜¥. Please try again ðŸ˜Š'\n        );\n      }\n    };\n    searchByRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n  };\n\n  return (\n    <>\n      <Form onSubmit={hendleSubmit}>\n        <div>\n          <Input\n            name=\"query\"\n            type=\"text\"\n            defaultValue={query}\n            placeholder=\"Search...\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </div>\n      </Form>\n      {error && <p>{error}</p>}\n\n      <ul>\n        {resultQuery?.length > 0 && (\n          <SearchMoviList resultQuery={resultQuery} />\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst apiKey = '53b17a0d0ffee53cfb4c8768c7c3aa3a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: apiKey,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searhMovies = async searchqQuery => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: apiKey,\n      query: searchqQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const responce = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.cast;\n};\n\nexport const getReviews = async id => {\n  const responce = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.results;\n};\n","import styled from 'styled-components';\nconst { NavLink } = require('react-router-dom');\nconst { Link } = require('react-router-dom');\n\nexport const NavItem = styled(NavLink)`\n  font-size: 30px;\n  display: inline-block;\n  list-style: none;\n  margin-right: 30px;\n  color: black;\n  padding: 3px;\n  border-radius: 5px;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: orange;\n    color: white;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  display: inline-block;\n  list-style: none;\n  margin-left: 30px;\n  color: black;\n  padding: 3px;\n  border-radius: 5px;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: orange;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\nexport const Text = styled.p`\n  font-size: 30px;\n  font-weight: 500;\n`;\n"],"names":["Input","styled","Button","Form","resultQuery","location","useLocation","map","title","id","to","state","from","useState","setResultQuery","useSearchParams","searchParams","setSearchParams","query","get","error","setError","useEffect","searchByRequest","searhMovies","fethMovi","onSubmit","event","preventDefault","form","currentTarget","elements","value","name","type","defaultValue","placeholder","length","apiKey","axios","getTrendingMovies","params","page","api_key","response","data","results","searchqQuery","getDetails","getCast","responce","cast","getReviews","NavLink","require","Link","LinkStyled","Text"],"sourceRoot":""}