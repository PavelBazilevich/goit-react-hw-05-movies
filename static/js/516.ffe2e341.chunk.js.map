{"version":3,"file":"static/js/516.ffe2e341.chunk.js","mappings":"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","sources":["Pages/MoviDetails/MoviDetails.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","Pages/MoviDetails/MoviDetails.jsx","Utils/Api.jsx","Utils/createUrl.js"],"sourcesContent":["import styled from 'styled-components';\nconst { Link } = require('react-router-dom');\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  display: inline-block;\n  list-style: none;\n  margin-left: 30px;\n  color: black;\n  padding: 10px;\n  border-radius: 5px;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: orange;\n    color: white;\n  }\n`;\n\nexport const Title = styled.p`\n  margin: 10px 35px;\n  font-size: 25px;\n  font-weight: 400;\n`;\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 4px;\n  padding: 20px 20px;\n  box-shadow: 0px 6px 5px -4px rgb(0 0 0 / 55%);\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n`;\n\nexport const FilmInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 1000px;\n  padding: 8px 4px;\n`;\n\nexport const Title = styled.p`\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\n\nexport const Heading = styled.p`\n  margin-bottom: 30px;\n\n  font-size: 25px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { createUrl } from '../../Utils/createUrl';\nimport { FilmInfo, Layout, Image, Heading, Title } from './MovieInfo.styled';\n\nexport const MovieInfo = ({ moviInfo }) => {\n  const {\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = moviInfo;\n\n  return (\n    <Layout>\n      <Image src={createUrl(poster_path)} alt={original_title} />\n      <FilmInfo>\n        <Title>\n          {title} ({String(release_date).slice(0, 4)})\n        </Title>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <Heading>Overviev</Heading>\n        <p>{overview}</p>\n        <Heading>Genres</Heading>\n        <p>{genres && genres.map(genre => genre.name).join(' ')}</p>\n      </FilmInfo>\n    </Layout>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { LinkStyled, Title } from './MoviDetails.styled';\nimport { useEffect, useState } from 'react';\nimport { getDetails } from 'Utils/Api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nconst MoviDetails = () => {\n  const { id } = useParams();\n  const [moviInfo, setMoviInfo] = useState({}) ?? {};\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const gobackLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fethDetails = async () => {\n      try {\n        const fethMoviDetails = await getDetails(id);\n        setMoviInfo(fethMoviDetails);\n      } catch {\n        setError('Oops... üò•. Please try again üòä');\n      }\n    };\n    fethDetails();\n  }, [id, setMoviInfo]);\n\n  return (\n    <main>\n      <>\n        <LinkStyled to={gobackLink}> ‚¨ÖÔ∏è Go Back</LinkStyled>\n        {error && <h2>{error}</h2>}\n        {moviInfo !== 0 && <MovieInfo moviInfo={moviInfo} />}\n        <Title>Additional information</Title>\n        <LinkStyled to=\"cast\" state={{ from: gobackLink }}>\n          Cast\n        </LinkStyled>\n        <LinkStyled to=\"reviews\" state={{ from: gobackLink }}>\n          Reviews\n        </LinkStyled>\n\n        <Outlet />\n      </>\n    </main>\n  );\n};\n\nexport default MoviDetails;\n","import axios from 'axios';\nconst apiKey = '53b17a0d0ffee53cfb4c8768c7c3aa3a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: apiKey,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searhMovies = async searchqQuery => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: apiKey,\n      query: searchqQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const responce = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.cast;\n};\n\nexport const getReviews = async id => {\n  const responce = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.results;\n};\n","export const createUrl = path => {\n  const url = 'https://image.tmdb.org/t/p/w500/';\n  return path ? url + path : 'https://i.postimg.cc/yxhh8Dtk/download.png';\n};\n"],"names":["Link","require","LinkStyled","styled","Title","Layout","Image","FilmInfo","Heading","MovieInfo","moviInfo","poster_path","original_title","title","release_date","vote_average","overview","genres","src","createUrl","alt","String","slice","Math","round","map","genre","name","join","id","useParams","useState","setMoviInfo","error","setError","gobackLink","useLocation","state","from","useEffect","fethDetails","getDetails","fethMoviDetails","to","apiKey","axios","getTrendingMovies","params","page","api_key","response","data","results","searhMovies","searchqQuery","query","getCast","responce","cast","getReviews","path"],"sourceRoot":""}