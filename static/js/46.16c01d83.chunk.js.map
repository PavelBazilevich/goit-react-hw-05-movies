{"version":3,"file":"static/js/46.16c01d83.chunk.js","mappings":"iQAEaA,EAAQC,EAAAA,GAAAA,GAAH,yGAOLC,EAAQD,EAAAA,GAAAA,GAAH,0G,oCCUlB,EAhBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAAOG,OAAS,GACfH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,yBACE,SAAC,IAAD,CAAYC,GAAE,iBAAYD,GAAME,MAAO,CAAEC,KAAMR,GAA/C,UACE,SAAC,IAAD,UAAOI,OAFFC,EADA,KASlB,ECeD,EA5Ba,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEiBC,EAAAA,EAAAA,MAFjB,OAETC,EAFS,OAGfN,EAAUM,GAHK,gDAKfJ,EACE,gHANa,yDAAH,qDAUhBE,GACD,GAAE,KAGD,6BACIH,IAAS,SAACf,EAAD,oCACVe,IAAS,SAACb,EAAD,UAAQa,KAClB,yBACE,SAAC,EAAD,CAAWZ,OAAQA,QAI1B,C,8LC/BKkB,EAAS,mCAEfC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMH,EAAiB,mCAAG,oGACRG,EAAAA,GAAAA,IAAU,qBAAsB,CACrDC,OAAQ,CACNC,KAAM,EACNC,QAASJ,KAJkB,cACzBK,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAUjBC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,GAAAA,IAAU,eAAgB,CAC/CC,OAAQ,CACNE,QAASJ,EACTU,MAAOD,KAJc,cACnBJ,EADmB,yBAOlBA,EAASC,KAAKC,SAPI,2CAAH,sDAUXI,EAAU,mCAAG,WAAMvB,GAAN,uFACDa,EAAAA,GAAAA,IAAA,gBAAmBb,GAAM,CAC9Cc,OAAQ,CACNE,QAASJ,KAHW,cAClBK,EADkB,yBAMjBA,EAASC,MANQ,2CAAH,sDASVM,EAAO,mCAAG,WAAMxB,GAAN,uFACEa,EAAAA,GAAAA,IAAA,gBAAmBb,EAAnB,YAAiC,CACtDc,OAAQ,CACNE,QAASJ,KAHQ,cACfa,EADe,yBAMdA,EAASP,KAAKQ,MANA,2CAAH,sDASPC,EAAU,mCAAG,WAAM3B,GAAN,uFACDa,EAAAA,GAAAA,IAAA,gBAAmBb,EAAnB,YAAiC,CACtDc,OAAQ,CACNE,QAASJ,KAHW,cAClBa,EADkB,yBAMjBA,EAASP,KAAKC,SANG,2CAAH,qD,gFC1CfS,EAAYC,EAAQ,IAApBD,QACAE,EAASD,EAAQ,IAAjBC,KAsBKC,IApBUvC,EAAAA,EAAAA,IAAOoC,EAAPpC,CAAH,uUAoBMA,EAAAA,EAAAA,IAAOsC,EAAPtC,CAAH,qU,qECvBVwC,E,OAAOxC,GAAAA,EAAH,gE","sources":["Pages/Home/Home.styled.js","components/List_Movie/ListMovie.jsx","Pages/Home/Home.jsx","Utils/Api.jsx","Utils/Styled.jsx","components/SearchMoviList/SearchMoviList.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  margin-left: 20px;\n  padding: 10px;\n  font-weight: 700;\n`;\n\nexport const Error = styled.h3`\n  font-size: 40px;\n  margin-left: 200px;\n  padding: 10px;\n  font-weight: 900;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { LinkStyled } from 'Utils/Styled';\nimport { Text } from 'components/SearchMoviList/SearchMoviList.styled';\nconst ListMovie = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.length > 0 &&\n        movies.map(({ title, id }) => (\n          <li key={id}>\n            <LinkStyled to={`movies/${id}`} state={{ from: location }}>\n              <Text>{title}</Text>\n            </LinkStyled>\n          </li>\n        ))}\n    </>\n  );\n};\nexport default ListMovie;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'Utils/Api';\nimport { Title, Error } from './Home.styled';\nimport ListMovie from 'components/List_Movie/ListMovie';\n\nconst Home = () => {\n  const [movies, setMovies] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fethMovies = async () => {\n      try {\n        const fethPopularMovies = await getTrendingMovies();\n        setMovies(fethPopularMovies);\n      } catch {\n        setError(\n          'Sorry, it was not possible to download what you were looking for ðŸ˜¥. Please try again ðŸ˜Š'\n        );\n      }\n    };\n    fethMovies();\n  }, []);\n\n  return (\n    <main>\n      {!error && <Title>Trending today âœ¨</Title>}\n      {error && <Error>{error}</Error>}\n      <ul>\n        <ListMovie movies={movies} />\n      </ul>\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\nconst apiKey = '53b17a0d0ffee53cfb4c8768c7c3aa3a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: apiKey,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searhMovies = async searchqQuery => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: apiKey,\n      query: searchqQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const responce = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.cast;\n};\n\nexport const getReviews = async id => {\n  const responce = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.results;\n};\n","import styled from 'styled-components';\nconst { NavLink } = require('react-router-dom');\nconst { Link } = require('react-router-dom');\n\nexport const NavItem = styled(NavLink)`\n  font-size: 30px;\n  display: inline-block;\n  list-style: none;\n  margin-right: 30px;\n  color: black;\n  padding: 3px;\n  border-radius: 5px;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: orange;\n    color: white;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  display: inline-block;\n  list-style: none;\n  margin-left: 30px;\n  color: black;\n  padding: 3px;\n  border-radius: 5px;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: orange;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\nexport const Text = styled.p`\n  font-size: 30px;\n  font-weight: 500;\n`;\n"],"names":["Title","styled","Error","movies","location","useLocation","length","map","title","id","to","state","from","useState","setMovies","error","setError","useEffect","fethMovies","getTrendingMovies","fethPopularMovies","apiKey","axios","params","page","api_key","response","data","results","searhMovies","searchqQuery","query","getDetails","getCast","responce","cast","getReviews","NavLink","require","Link","LinkStyled","Text"],"sourceRoot":""}