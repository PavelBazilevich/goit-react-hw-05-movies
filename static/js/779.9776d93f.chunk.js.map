{"version":3,"file":"static/js/779.9776d93f.chunk.js","mappings":"8SACMA,EAAS,mCAEfC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,GAAAA,IAAU,qBAAsB,CACrDE,OAAQ,CACNC,KAAM,EACNC,QAASL,KAJkB,cACzBM,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAUjBC,EAAW,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,GAAAA,IAAU,eAAgB,CAC/CE,OAAQ,CACNE,QAASL,EACTW,MAAOD,KAJc,cACnBJ,EADmB,yBAOlBA,EAASC,KAAKC,SAPI,2CAAH,sDAUXI,EAAU,mCAAG,WAAMC,GAAN,uFACDZ,EAAAA,GAAAA,IAAA,gBAAmBY,GAAM,CAC9CV,OAAQ,CACNE,QAASL,KAHW,cAClBM,EADkB,yBAMjBA,EAASC,MANQ,2CAAH,sDASVO,EAAO,mCAAG,WAAMD,GAAN,uFACEZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,YAAiC,CACtDV,OAAQ,CACNE,QAASL,KAHQ,cACfe,EADe,yBAMdA,EAASR,KAAKS,MANA,2CAAH,sDASPC,EAAU,mCAAG,WAAMJ,GAAN,uFACDZ,EAAAA,GAAAA,IAAA,gBAAmBY,EAAnB,YAAiC,CACtDV,OAAQ,CACNE,QAASL,KAHW,cAClBe,EADkB,yBAMjBA,EAASR,KAAKC,SANG,2CAAH,qD,gKCzCVU,EAASC,EAAAA,GAAAA,IAAH,yGAONC,EAAaD,EAAAA,GAAAA,GAAH,wIASVE,EAAaF,EAAAA,GAAAA,GAAH,qLAUVG,EAAcH,EAAAA,GAAAA,EAAH,yF,SCiBxB,EAvCgB,WAAO,IAAD,EACpB,aAAsCI,EAAAA,EAAAA,UAAS,WAA/C,QAAsD,CAAC,EAAvD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQd,GAAOe,EAAAA,EAAAA,MAAPf,GAeR,OAbAgB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAESb,EAAAA,EAAAA,IAAWJ,GAFpB,OAEVkB,EAFU,OAGhBN,EAAeM,GAHC,gDAKhBJ,EAAS,uDALO,yDAAH,qDAQjBG,GAED,GAAE,CAACjB,KAGF,UAACK,EAAD,WACGQ,IAAS,uBAAIA,IACW,KAAb,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaQ,UACZ,sEAEU,OAAXR,QAAW,IAAXA,OAAA,EAAAA,EAAaQ,QAAS,IACrB,SAACZ,EAAD,UACGI,EAAYS,KAAI,YAA8B,IAA3BpB,EAA0B,EAA1BA,GAAIqB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,UAACd,EAAD,YACE,UAACC,EAAD,sBAAsBY,MACtB,uBAAIC,MAFWtB,EAKpB,QAKV,C","sources":["Utils/Api.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst apiKey = '53b17a0d0ffee53cfb4c8768c7c3aa3a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      page: 1,\n      api_key: apiKey,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searhMovies = async searchqQuery => {\n  const response = await axios.get('search/movie', {\n    params: {\n      api_key: apiKey,\n      query: searchqQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const responce = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.cast;\n};\n\nexport const getReviews = async id => {\n  const responce = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  padding: 20px 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  padding: 0 20px;\n  display: flex;\n  margin: 0 -10px;\n  flex-wrap: wrap;\n  gap: 3px;\n  list-style: disc;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 5px 5px;\n  flex: 1 1 auto;\n  margin: 0 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 5px;\n  background-color: #ff4500;\n`;\n\nexport const ReviewAvtor = styled.p`\n  display: block;\n\n  font-weight: 500;\n  margin-bottom: 3px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getReviews } from 'Utils/Api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Layout, ReviewList, ReviewItem, ReviewAvtor } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [revievsData, setReviewsData] = useState([]) ?? {};\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fethReviews = async () => {\n      try {\n        const fethReview = await getReviews(id);\n        setReviewsData(fethReview);\n      } catch {\n        setError('Oops... ðŸ˜¥. Please try again ðŸ˜Š');\n      }\n    };\n    fethReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    <Layout>\n      {error && <p>{error}</p>}\n      {revievsData?.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n      {revievsData?.length > 0 && (\n        <ReviewList>\n          {revievsData.map(({ id, author, content }) => {\n            return (\n              <ReviewItem key={id}>\n                <ReviewAvtor>Author: {author}</ReviewAvtor>\n                <p>{content}</p>\n              </ReviewItem>\n            );\n          })}\n        </ReviewList>\n      )}\n    </Layout>\n  );\n};\nexport default Reviews;\n"],"names":["apiKey","axios","getTrendingMovies","params","page","api_key","response","data","results","searhMovies","searchqQuery","query","getDetails","id","getCast","responce","cast","getReviews","Layout","styled","ReviewList","ReviewItem","ReviewAvtor","useState","revievsData","setReviewsData","error","setError","useParams","useEffect","fethReviews","fethReview","length","map","author","content"],"sourceRoot":""}